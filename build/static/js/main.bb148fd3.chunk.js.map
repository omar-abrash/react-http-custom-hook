{"version":3,"sources":["components/AddUser/AddUser.js","hooks/use-hooks.js","components/Users/Users.js","App.js","index.js","components/AddUser/AddUser.module.css","components/Users/Users.module.css"],"names":["AddUser","props","userName","useRef","skills","className","styles","onSubmit","event","preventDefault","userData","current","value","split","afterAddUser","htmlFor","id","type","ref","placeholder","sendingState","btn__1","btn__2","useHttp","applyData","useState","loading","setNewLoading","error","setNewError","httpRequest","useCallback","httpRequestObject","fetch","url","method","body","JSON","stringify","headers","response","console","log","ok","Error","json","data","message","setTimeout","Users","usersArray","setNewUsersArray","applyDataHandler","newData","key","prevSate","useMemo","getDataHandler","useEffect","users","onClick","list","map","user","skill","Math","random","App","Fragment","newUser","ReactDOM","render","document","getElementById","module","exports"],"mappings":"kOA8DeA,EA1DC,SAACC,GACf,IAAMC,EAAWC,iBAAO,IAClBC,EAASD,iBAAO,IAiBtB,OACE,qBAAKE,UAAWC,IAAM,KAAtB,SACE,uBAAMC,SAjBY,SAACC,GACrBA,EAAMC,iBAEN,IAAMC,EAAW,CACfR,SAAUA,EAASS,QAAQC,MAC3BR,OAAQA,EAAOO,QAAQC,MAAMC,MAAM,MAEX,KAAtBH,EAASR,UAAuC,KAApBQ,EAASN,SAGzCH,EAAMa,aAAaJ,GACnBR,EAASS,QAAQC,MAAQ,GACzBR,EAAOO,QAAQC,MAAQ,GACxB,EAIG,UACE,gCACE,uBAAOG,QAAQ,WAAf,uBACA,uBACEC,GAAG,WACHC,KAAK,OACLC,IAAKhB,EACLiB,YAAY,iBAGhB,gCACE,uBAAOJ,QAAQ,SAAf,oBACA,uBACEC,GAAG,SACHC,KAAK,OACLC,IAAKd,EACLe,YAAY,mCAGhB,gCACE,wBACEF,KAAK,SACLZ,UAAWJ,EAAMmB,aAAa,GAAKd,IAAOe,OAASf,IAAOgB,OAF5D,SAIGrB,EAAMmB,aAAa,GAAK,YAAc,oBAEzC,uCACQ,uBADR,qJAST,E,8BCjBcG,EAxCC,SAACC,GAEf,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAA6BF,mBAAS,MAAtC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAcC,sBAAW,iDAC7B,WAAOC,GAAP,mGAEIL,GAAc,GAFlB,SAG2BM,MAAMD,EAAkBE,IAAK,CAClDC,OAAQH,EAAkBG,OAAS,OAAS,MAC5CC,KAAMJ,EAAkBI,KACpBC,KAAKC,UAAUN,EAAkBI,MACjC,KACJG,QAASP,EAAkBO,QAAUP,EAAkBO,QAAU,CAAC,IARxE,UAGUC,EAHV,OAUIC,QAAQC,IAAI,aACPF,EAASG,GAXlB,sBAYY,IAAIC,MAAM,wBAZtB,wBAcuBJ,EAASK,OAdhC,QAcUC,EAdV,OAeItB,EAAUsB,GAfd,kDAiBIjB,EAAY,KAAEkB,SAjBlB,QAmBEpB,GAAc,GAEdqB,YAAW,WACwB,SAA7BhB,EAAkBG,QACpBR,GAAc,EAEjB,GAAE,KAzBL,0DAD6B,sDA6B7B,CAACH,IAGH,MAAO,CAAEE,UAASE,QAAOE,cAC1B,E,gBCsBcmB,EAzDD,WACZ,MAAuCxB,mBAAS,IAAhD,mBAAOyB,EAAP,KAAmBC,EAAnB,KAEMC,EAAmBrB,uBAAY,SAACsB,GACpCF,EAAiB,IAD+B,eAErCG,GACTH,GAAiB,SAACI,GAAD,4BAAkBA,GAAlB,CAA4BF,EAAQC,IAApC,GAH6B,EAEhD,IAAK,IAAMA,KAAOD,EAAU,EAAjBC,EAGZ,GAAE,IAEGtB,EAAoBwB,mBAAQ,WAChC,MAAO,CACLtB,IAAK,uEAER,GAAE,IAEH,EAAwCX,EAAQ6B,GAAxC1B,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAAOE,EAAxB,EAAwBA,YAElB2B,EAAiB1B,uBAAY,WACjCU,QAAQC,IAAI,mBACZZ,EAAYE,EACb,GAAE,CAACF,EAAaE,IAOjB,OAJA0B,qBAAU,WACRD,GACD,GAAE,CAACA,IAGF,sBAAKpD,UAAWC,IAAOqD,MAAvB,UACE,gCACE,uCACQ,uBADR,yJAMA,wBAAQC,QAASH,EAAjB,uCAED/B,IAAYE,GAAS,iDACrBA,GAAS,6BAAKA,IACf,qBAAKvB,UAAWC,IAAOuD,KAAvB,SACGX,EAAWY,KAAI,SAACC,GAAD,OACd,gCACE,6BAAKA,EAAK7D,WACV,6BACG6D,EAAK3D,OAAO0D,KAAI,SAACE,GAAD,OACf,6BAAiCA,GAAxBA,EAAQC,KAAKC,SADP,QAHXD,KAAKC,SADD,QAavB,EC9BcC,MAxBf,WAEE,MAAwC5C,IAAhCG,EAAR,EAAQA,QAASE,EAAjB,EAAiBA,MAAOE,EAAxB,EAAwBA,YAcxB,OACE,eAAC,IAAMsC,SAAP,WACE,cAAC,EAAD,CAAStD,aAdU,SAACuD,GAStBvC,EAR0B,CACxBI,IAAK,uEACLC,OAAQ,OACRC,KAAMiC,EACN9B,QAAS,CACP,eAAgB,qBAIrB,EAI0CnB,aAAc,CAACM,EAASE,KAC/D,cAAC,EAAD,MAGL,ECxBD0C,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,Q,oBCJjDC,EAAOC,QAAU,CAAC,KAAO,sBAAsB,OAAS,wBAAwB,OAAS,wB,oBCAzFD,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,KAAO,oB","file":"static/js/main.bb148fd3.chunk.js","sourcesContent":["import React, { useRef } from \"react\";\r\n\r\nimport styles from \"./AddUser.module.css\";\r\n\r\nconst AddUser = (props) => {\r\n  const userName = useRef(\"\");\r\n  const skills = useRef(\"\");\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n    // console.log(\"Hi Omar!\");\r\n    const userData = {\r\n      userName: userName.current.value,\r\n      skills: skills.current.value.split(\"/\"),\r\n    };\r\n    if (userData.userName === \"\" || userData.skills === \"\") {\r\n      return;\r\n    }\r\n    props.afterAddUser(userData);\r\n    userName.current.value = \"\";\r\n    skills.current.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <div className={styles[\"form\"]}>\r\n      <form onSubmit={submitHandler}>\r\n        <div>\r\n          <label htmlFor=\"userName\">User Name</label>\r\n          <input\r\n            id=\"userName\"\r\n            type=\"text\"\r\n            ref={userName}\r\n            placeholder=\"your name\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"skills\">skills</label>\r\n          <input\r\n            id=\"skills\"\r\n            type=\"text\"\r\n            ref={skills}\r\n            placeholder=\"separate skills using ' / '\"\r\n          />\r\n        </div>\r\n        <div>\r\n          <button\r\n            type=\"submit\"\r\n            className={props.sendingState[0] ? styles.btn__1 : styles.btn__2}\r\n          >\r\n            {props.sendingState[0] ? \"Send Data\" : \"Sending .......\"}\r\n          </button>\r\n          <p>\r\n            Note: <br />\r\n            when adding username and skills, the data will send to Firebase :\r\n            \"https://normal-form-130f3-default-rtdb.firebaseio.com/usersData.json\"\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","//\r\nimport { useState, useCallback } from \"react\";\r\n//\r\nconst useHttp = (applyData) => {\r\n  // const [newData, setNewData] = useState(null);\r\n  const [loading, setNewLoading] = useState(true);\r\n  const [error, setNewError] = useState(null);\r\n  //\r\n  const httpRequest = useCallback(\r\n    async (httpRequestObject) => {\r\n      try {\r\n        setNewLoading(true);\r\n        const response = await fetch(httpRequestObject.url, {\r\n          method: httpRequestObject.method ? \"POST\" : \"GET\",\r\n          body: httpRequestObject.body\r\n            ? JSON.stringify(httpRequestObject.body)\r\n            : null,\r\n          headers: httpRequestObject.headers ? httpRequestObject.headers : {},\r\n        });\r\n        console.log(\"response!\");\r\n        if (!response.ok) {\r\n          throw new Error(\"some thing is Wrong!\");\r\n        }\r\n        const data = await response.json();\r\n        applyData(data);\r\n      } catch (e) {\r\n        setNewError(e.message);\r\n      }\r\n      setNewLoading(false);\r\n      // I add this stateful logic for sending button stylation.\r\n      setTimeout(() => {\r\n        if (httpRequestObject.method === \"POST\") {\r\n          setNewLoading(true);\r\n        }\r\n      }, 400);\r\n      //\r\n    },\r\n    [applyData]\r\n  );\r\n\r\n  return { loading, error, httpRequest };\r\n};\r\n//\r\nexport default useHttp;\r\n\r\n//\r\n","import React, { useState, useEffect, useMemo, useCallback } from \"react\";\r\n\r\nimport useHttp from \"../../hooks/use-hooks\";\r\n\r\nimport styles from \"./Users.module.css\";\r\n\r\nconst Users = () => {\r\n  const [usersArray, setNewUsersArray] = useState([]);\r\n  //\r\n  const applyDataHandler = useCallback((newData) => {\r\n    setNewUsersArray([]);\r\n    for (const key in newData) {\r\n      setNewUsersArray((prevSate) => [...prevSate, newData[key]]);\r\n    }\r\n  }, []);\r\n  //\r\n  const httpRequestObject = useMemo(() => {\r\n    return {\r\n      url: \"https://normal-form-130f3-default-rtdb.firebaseio.com/usersData.json\",\r\n    };\r\n  }, []);\r\n  //\r\n  const { loading, error, httpRequest } = useHttp(applyDataHandler);\r\n  //\r\n  const getDataHandler = useCallback(() => {\r\n    console.log(\"getDataHandler!\");\r\n    httpRequest(httpRequestObject);\r\n  }, [httpRequest, httpRequestObject]);\r\n  //\r\n\r\n  useEffect(() => {\r\n    getDataHandler();\r\n  }, [getDataHandler]);\r\n\r\n  return (\r\n    <div className={styles.users}>\r\n      <div>\r\n        <p>\r\n          Note: <br />\r\n          the data which appear in this part is loading automatically, but if\r\n          you adding new data from the first adding form, you must click to\r\n          below button.\r\n        </p>\r\n        <button onClick={getDataHandler}>Get Data from Firebase</button>\r\n      </div>\r\n      {loading && !error && <h4>loading .......</h4>}\r\n      {error && <h4>{error}</h4>}\r\n      <div className={styles.list}>\r\n        {usersArray.map((user) => (\r\n          <div key={Math.random()}>\r\n            <h3>{user.userName}</h3>\r\n            <ul>\r\n              {user.skills.map((skill) => (\r\n                <li key={skill + Math.random()}>{skill}</li>\r\n              ))}\r\n            </ul>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\n\r\nimport AddUser from \"./components/AddUser/AddUser\";\r\nimport Users from \"./components/Users/Users\";\r\n\r\nimport useHttp from \"./hooks/use-hooks\";\r\n\r\nfunction App() {\r\n  //\r\n  const { loading, error, httpRequest } = useHttp();\r\n\r\n  const addUserHandler = (newUser) => {\r\n    const httpRequestObject = {\r\n      url: \"https://normal-form-130f3-default-rtdb.firebaseio.com/usersData.json\",\r\n      method: \"POST\",\r\n      body: newUser,\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n    };\r\n    httpRequest(httpRequestObject);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <AddUser afterAddUser={addUserHandler} sendingState={[loading, error]} />\r\n      <Users />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddUser_form__3_Mo7\",\"btn__1\":\"AddUser_btn__1__1IAPv\",\"btn__2\":\"AddUser_btn__2__2P5zh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"users\":\"Users_users__1OUl_\",\"list\":\"Users_list__3cYRc\"};"],"sourceRoot":""}